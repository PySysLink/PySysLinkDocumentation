<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="SampleTime_8h" kind="file" language="C++">
    <compoundname>SampleTime.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">vector</includes>
    <includes local="no">limits</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includedby refid="ISimulationBlock_8h" local="yes">PySysLinkBase/src/ISimulationBlock.h</includedby>
    <includedby refid="SampleTime_8cpp" local="yes">PySysLinkBase/src/SampleTime.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>PySysLinkBase/src/SampleTime.h</label>
        <link refid="SampleTime_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>PySysLinkBase/src/BlockTypeSupportPluginLoader.h</label>
        <link refid="BlockTypeSupportPluginLoader_8h_source"/>
      </node>
      <node id="4">
        <label>PySysLinkBase/src/ContinuousAndOde/BasicOdeSolver.h</label>
        <link refid="BasicOdeSolver_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>PySysLinkBase/src/ContinuousAndOde/ISimulationBlockWithContinuousStates.h</label>
        <link refid="ISimulationBlockWithContinuousStates_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>PySysLinkBase/src/IBlockFactory.h</label>
        <link refid="IBlockFactory_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>PySysLinkBase/src/ISimulationBlock.h</label>
        <link refid="ISimulationBlock_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>PySysLinkBase/src/ModelParser.h</label>
        <link refid="ModelParser_8h_source"/>
      </node>
      <node id="9">
        <label>PySysLinkBase/src/PortLink.h</label>
        <link refid="PortLink_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>PySysLinkBase/src/SampleTime.h</label>
        <link refid="SampleTime_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>PySysLinkBase/src/SimulationManager.h</label>
        <link refid="SimulationManager_8h_source"/>
      </node>
      <node id="10">
        <label>PySysLinkBase/src/SimulationModel.h</label>
        <link refid="SimulationModel_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classPySysLinkBase_1_1SampleTime" prot="public">PySysLinkBase::SampleTime</innerclass>
    <innernamespace refid="namespacePySysLinkBase">PySysLinkBase</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PY_SYS_LINK_BASE_SAMPLE_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PY_SYS_LINK_BASE_SAMPLE_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">PySysLinkBase</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SampleTimeType</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continuous,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discrete,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inherited,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multirate</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classPySysLinkBase_1_1SampleTime" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SampleTimeType<sp/>sampleTimeType;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discreteSampleTime;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>continuousSampleTimeGroup<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SampleTimeType&gt;<sp/>supportedSampleTimeTypesForInheritance<sp/>=<sp/>std::vector&lt;SampleTimeType&gt;{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;SampleTime&gt;&gt;<sp/>multirateSampleTimes<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputMultirateSampleTimeIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputMultirateSampleTimeIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discreteSampleTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>continuousSampleTimeGroup,<sp/>std::vector&lt;SampleTimeType&gt;<sp/>supportedSampleTimeTypesForInheritance,<sp/>std::vector&lt;std::shared_ptr&lt;SampleTime&gt;&gt;<sp/>multirateSampleTimes,<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputMultirateSampleTimeIndex<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputMultirateSampleTimeIndex<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType)<sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN(),<sp/>-1,<sp/>std::vector&lt;SampleTimeType&gt;{},<sp/>{}){}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>discreteSampleTime)<sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>discreteSampleTime,<sp/>-1,<sp/>std::vector&lt;SampleTimeType&gt;{},<sp/>{}){}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>continuousSampleTimeGroup)<sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN(),<sp/>continuousSampleTimeGroup,<sp/>std::vector&lt;SampleTimeType&gt;{},<sp/>{}){}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/>std::vector&lt;SampleTimeType&gt;<sp/>supportedSampleTimeTypesForInheritance)<sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN(),<sp/>-1,<sp/>supportedSampleTimeTypesForInheritance,<sp/>{}){}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/>std::vector&lt;std::shared_ptr&lt;SampleTime&gt;&gt;<sp/>multirateSampleTimes)<sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN(),<sp/>-1,<sp/>{},<sp/>multirateSampleTimes){}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(SampleTimeType<sp/>sampleTimeType,<sp/>std::vector&lt;std::shared_ptr&lt;SampleTime&gt;&gt;<sp/>multirateSampleTimes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputMultirateSampleTimeIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputMultirateSampleTimeIndex)<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classPySysLinkBase_1_1SampleTime" kindref="compound">SampleTime</ref>(sampleTimeType,<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN(),<sp/>-1,<sp/>{},<sp/>multirateSampleTimes,<sp/>inputMultirateSampleTimeIndex,<sp/>outputMultirateSampleTimeIndex){}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SampleTimeType&amp;<sp/>GetSampleTimeType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetDiscreteSampleTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetContinuousSampleTimeGroup()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;SampleTimeType&gt;<sp/>GetSupportedSampleTimeTypesForInheritance()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;SampleTime&gt;&gt;<sp/>GetMultirateSampleTimes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMultirateSampleTimeInIndex(std::shared_ptr&lt;SampleTime&gt;<sp/>multirateSampleTime,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasMultirateInheritedSampleTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetInputMultirateSampleTimeIndex()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOutputMultirateSampleTimeIndex()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInputMultirateInherited()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsOutputMultirateInherited()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>SampleTimeTypeString(SampleTimeType<sp/>sampleTimeType);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PY_SYS_LINK_BASE_SAMPLE_TIME<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="PySysLinkBase/src/SampleTime.h"/>
  </compounddef>
</doxygen>
